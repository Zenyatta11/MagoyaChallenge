plugins {
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.github.spotbugs' version '5.0.13'
    id 'checkstyle'
    id 'java'
    id 'org.liquibase.gradle' version '2.1.1'
    id 'org.openapi.generator' version '6.2.0'
}

group = 'com.zenyatta'
version = '0.0.1'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    
    implementation 'org.springframework.boot:spring-boot-starter-web:3.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.1'
    implementation 'org.springframework.retry:spring-retry:2.0.0'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    implementation 'com.eventstore:db-client-java:4.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.1'
    implementation 'org.postgresql:postgresql:42.5.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0'

	implementation 'net.logstash.logback:logstash-logback-encoder:7.2'

    implementation 'junit:junit:4.13.2'
    implementation 'org.yaml:snakeyaml:2.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.withType(JavaCompile) {
  options.compilerArgs += "--enable-preview"
}
tasks.withType(Test) {
  jvmArgs += "--enable-preview"
}
tasks.withType(JavaExec) {
  jvmArgs += "--enable-preview"
}

tasks.withType(Checkstyle) {
    reports {
        xml.required = false
        html.required = true
    }
}

spotbugsMain {
    excludeFilter.set(file("$rootProject.projectDir/config/build/spotbugs_exclude_filter.xml")) 
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

spotbugsTest {
    enabled = false
}

checkstyle {
    toolVersion "10.4"
    configFile = file("$rootProject.projectDir/config/build/checkstyle_config.xml")
}

test {
    useJUnitPlatform() 
    reports {
        junitXml.required = true
        html.required = true
        junitXml.destination = file("$buildDir/reports/tests/")
    }
}

jar {
    enabled = false
}

apply from: "$projectDir/gradle/preCommit.gradle"
